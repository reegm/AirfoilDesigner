name: Build and Release Windows EXEs

on:
  push:
    tags: ['v*']
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - arch: x86
            python-version: '3.11'
            installer: conda
          - arch: x64
            python-version: '3.x'
            installer: pip

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # x86: set up Miniforge with 32-bit Python + SciPy
      - name: Setup Miniforge (x86)
        if: matrix.installer == 'conda'
        uses: conda-incubator/setup-miniconda@v2
        with:
          architecture: x86
          python-version: ${{ matrix.python-version }}
          activate-environment: base

      - name: Install deps (x86)
        if: matrix.installer == 'conda'
        run: |
          conda install -y scipy pyinstaller

      # x64: normal pip flow
      - name: Set up Python (x64)
        if: matrix.installer == 'pip'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: pip

      - name: Install deps (x64)
        if: matrix.installer == 'pip'
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Install UPX
        run: choco install upx

      - name: Build EXE (${{ matrix.arch }})
        env:
          PYTHONOPTIMIZE: 2
        run: |
          pyinstaller --onefile --noconsole \ --clean --strip \ --upx-dir "C:\Program Files\upx" \ --name AirfoilDesigner-${{ matrix.arch }} \ run_gui.py

      - name: Further compress with UPX (${{ matrix.arch }})
        run: upx --best --lzma dist\AirfoilDesigner-${{ matrix.arch }}.exe

      - name: Upload artifact (${{ matrix.arch }})
        uses: actions/upload-artifact@v4
        with:
          name: AirfoilDesigner-${{ matrix.arch }}
          path: dist/AirfoilDesigner-${{ matrix.arch }}.exe

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4
        with: { name: AirfoilDesigner-x86 }
      - uses: actions/download-artifact@v4
        with: { name: AirfoilDesigner-x64 }

      - id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}

      - name: Upload x86 asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: AirfoilDesigner-x86/AirfoilDesigner-x86.exe
          asset_name: AirfoilDesigner-x86.exe

      - name: Upload x64 asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: AirfoilDesigner-x64/AirfoilDesigner-x64.exe
          asset_name: AirfoilDesigner-x64.exe
