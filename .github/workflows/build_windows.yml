name: Build and Release Windows EXEs

on:
  push:
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - arch: x86
            python-version: '3.11'
          - arch: x64
            python-version: '3.x'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python (${{ matrix.arch }})
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
          cache: pip

      - name: Install UPX
        run: choco install upx

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Build EXE (${{ matrix.arch }})
        env:
          PYTHONOPTIMIZE: 2
        run: |
          pyinstaller --onefile --noconsole \
            --clean --strip \
            --upx-dir "C:\Program Files\upx" \
            --name AirfoilDesigner-${{ matrix.arch }} \
            run_gui.py

      - name: Further compress with UPX (${{ matrix.arch }})
        run: upx --best --lzma dist\AirfoilDesigner-${{ matrix.arch }}.exe

      - name: List dist folder
        run: dir dist\

      - name: Upload build artifact (${{ matrix.arch }})
        uses: actions/upload-artifact@v4
        with:
          name: AirfoilDesigner-${{ matrix.arch }}
          path: dist/AirfoilDesigner-${{ matrix.arch }}.exe

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download x86 build
        uses: actions/download-artifact@v4
        with:
          name: AirfoilDesigner-x86

      - name: Download x64 build
        uses: actions/download-artifact@v4
        with:
          name: AirfoilDesigner-x64

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}

      - name: Upload x86 asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: AirfoilDesigner-x86/AirfoilDesigner-x86.exe
          asset_name: AirfoilDesigner-x86.exe
          asset_content_type: application/octet-stream

      - name: Upload x64 asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: AirfoilDesigner-x64/AirfoilDesigner-x64.exe
          asset_name: AirfoilDesigner-x64.exe
          asset_content_type: application/octet-stream
